List of possible queries to make
1. What was the average consumption of Laser Welding Machine 2 in 2024-07? (0.000731)
2. Show me the summary of KPI `consumption` for the Riveting Machine for the first 10 days of May. 
    (Max consumption: 0.007274787335954055 on 2024-05-03
    Avg consumption: 4.294359326858294e-05)
3. Which machine had the highest average cost in August? (Medium Capacity Cutting Machine 2 with avg cost: 0.0010723231566129407)
4. Which machines had the avg power exceeding threshold 0.003 in September? 
    (Large Capacity Cutting Machine 1, 
    Large Capacity Cutting Machine 2, 
    Low Capacity Cutting Machine 1, 
    Medium Capacity Cutting Machine 1, 
    Medium Capacity Cutting Machine 2)
5. List machines where the avg `working_time` was above 50000 and say in which month it happened.
    (Assembly Machine 1	on 2024-10 had an avg working_time of 62671.789474	
    Laser Cutter on	2024-10 had an avg working_time of 62300.263158)
6. What is the avg consumption for machine Large Capacity Cutting Machine 1 in the month of 2024-05? (0.002799)
7. List the months in which the Laser Cutter had an avg working_time lower than 10000.
    (From March to July the avg `working_time` was 0.0)

Other queries could be prepared looking at the user stories we made.


Concerning the KB:
- We can keep a file with a description of our machines and KPIs (data/kb1.json is a prototype that we can adjust)
- We can add a file with alerts or flagged descriptions for out-of-bound KPI values, but in order to do so we need to understand which is the standard behaviour for each machine and KPI, so maybe we can look at the work done by Group 3 for this
- [DONE: dataset/smart_app_data.json] We can make a big json that reports the dataset we have in this kind of shape:
        {
        "machines": [
            {
            "machine_id": "M1",
            "data": [
                {
                "date": "2023-03-01",
                "KPIs": {
                    "KPI 1": {
                    "sum": 320.5,
                    "average": 32.05,
                    "min": 30.1,
                    "max": 34.0
                    },
                    "KPI 2": {
                    "sum": 1200.2,
                    "average": 120.02,
                    "min": 115.0,
                    "max": 125.3
                    },
                    // ...other KPIs for the day
                }
                },
                // ...other dates
            ]
            },
            // ...other machines
        ]
        }
 therefore, NOT the actual dataset/kb2.json that reports an approximation of the actual data obtained with the method .describe()
 - [DONE: dataset/monthly_smart_app_data.json] We could prepare a file with KPI summary by month, if we think that the queries asking for a monthly analysis make sense. The shape that it could have is this:
        {
        "machines": [
            {
            "machine_id": "M1",
            "monthly_summary": [
                {
                "month": "2023-03",
                "KPIs": {
                    "KPI 1": {
                    "average": 32.1,
                    "min": 30.0,
                    "max": 34.5
                    },
                    "KPI 2": {
                    "average": 118.5,
                    "min": 112.0,
                    "max": 123.4
                    }
                }
                },
                // ...other months
            ]
            }
        ]
        }



----

A lighter encoder works but need smaller files as documents. We tried to use all the mnonthly json file and it didnt work,
she said that there is not available data for our query, by reducing it to 3 months it answers correctly with multiple tries.

For the query 7. we have solved the context problem by incresing the similarity_top_k to a larger number (4-5), it gives
correct answer for 3 months out of 4, for the first one it still asnwer but with another data 
(consumption_working instead of consumption)
